
cache:
  untracked: false #cache all files that are untracked in your Git
#  key: $CI_COMMIT_SHA #-$CI_COMMIT_REF_NAME #-$CI_COMMIT_SHA
#  paths:
#    - .goBinTmp

before_script:
  - echo "before_script"
  - hostname && cat /etc/*lease && ip a && env && pwd && ls -al
#  - mkdir -p .goBinTmp

stages:
#  - check_service
  - build_push

#job_checkout:
#  stage: checkout
#  image: debian:stable
#  script:
#    - echo "检测有改动的微服务项目"
#    - |
#      apt update -qy && apt upgrade -qy
#      apt install -y git
#      git diff --no-commit-id --name-only -r `git log -n 2 --oneline --pretty=format:"%h" | tail -n1` | cut -d/ -f2 | sort -u >  projects
#      printf "Modified directories:\n"
#      cat projects
#      while read project; do
#        if grep -Fxq $project ./.circleci/service-dirs; then
#          printf "\nTriggerring build for project: "$project
#          curl -X POST -F token=3a67414383be39c0cf351ea9efa16d -F "variables[SERVICE_NAME]=${project}" -F ref=master http://local.gitlab.com/api/v4/projects/2/trigger/pipeline
#        fi
#      done < projects
#  except:
#    - triggers

#.check_service_template: &check_service_template
#  image: debian:stable
#  stage: check_service
#  script:
#    - sed -i "s/deb.debian.org/mirrors.aliyun.com/g" /etc/apt/sources.list
#    - apt update -qy && apt upgrade -qy
#    - apt install -y curl
#    - echo $SERVICE_NAME
#    - curl -X POST -F token=3a67414383be39c0cf351ea9efa16d -F "variables[SERVICE_NAME]={$SERVICE_NAME}" -F ref=master http://local.gitlab.com/api/v4/projects/2/trigger/pipeline

#job_app_im:
#  variables:
#    SERVICE_NAME: app-im
#  <<: *check_service_template
#  rules:
#    - changes:
#        - app/im/**/*
#        - middlewares/**/*
#    - if: '$TRIGGER_JOB == "app-im"'
#      when: always

#job_domain_user:
#  variables:
#    SERVICE_NAME: domain-user
#  <<: *check_service_template
#  rules:
#    - changes:
#        - domain/user/**/*
#        - middlewares/**/*
#    - if: '$TRIGGER_JOB == "domain-user"'
#      when: always

#模板
.build_push_template: &build_push_template
  stage: build_push
  image: docker:stable
  script:
    - echo "开始 build $SERVICE_NAME"
    - docker login --username=$DOCKER_USER $DOCKER_IMAGE_HOST -p $DOCKER_PASS
    - docker build -t $DOCKER_IMAGE_HOST/$DOCKER_IMAGE_NAMESPACE/$SERVICE_NAME:latest -f .gitlab-ci/$SERVICE_NAME/Dockerfile .
    - docker push $DOCKER_IMAGE_HOST/$DOCKER_IMAGE_NAMESPACE/$SERVICE_NAME:latest

#im应用服务
build_push_app_im:
  variables:
    SERVICE_NAME: app-im
  <<: *build_push_template
  rules:
    - changes:
        - app/im/**/*
        - middlewares/**/*

#用户领域服务
build_push_domain_user:
  variables:
    SERVICE_NAME: domain-user
  <<: *build_push_template
  rules:
    - changes:
        - domain/user/**/*
        - middlewares/**/*

#好友领域服务
build_push_domain_friend:
  variables:
    SERVICE_NAME: domain-friend
  <<: *build_push_template
  rules:
    - changes:
        - domain/friend/**/*
        - middlewares/**/*

#消息领域服务
build_push_domain_message:
  variables:
    SERVICE_NAME: domain-message
  <<: *build_push_template
  rules:
    - changes:
        - domain/message/**/*
        - middlewares/**/*

#认证领域服务
build_push_domain_auth:
  variables:
    SERVICE_NAME: domain-auth
  <<: *build_push_template
  rules:
    - changes:
        - domain/auth/**/*
        - middlewares/**/*

#job_test:
#  stage: test
#  script:
#    - echo "Testing is starting"
#    - printf "mode=test\nlog_dir=/data1/ms/log/fingerprintGo/" > .env
#    - go vet ./... #语法错误检查
#    - ping -c1  redis  #
#    #    - go test $(go list ./...)
#    - go test -v  ./...  # -benchmem -bench=.
#  services: #docker link
#    - name: redis
#      alias: redis.test
#  tags:
#    - cms